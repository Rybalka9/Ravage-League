import { useEffect, useState } from "react";
import axios from "axios";

export default function Leagues() {
  const [leagues, setLeagues] = useState([]);
  const [name, setName] = useState("");
  const [prize, setPrize] = useState("");

  // –ø—Ä–æ—Å—Ç–µ–π—à–µ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∞
  const [isAdmin, setIsAdmin] = useState(false);
  const [login, setLogin] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");

  useEffect(() => {
    fetchLeagues();
  }, []);

  const fetchLeagues = async () => {
    try {
      const res = await axios.get("http://localhost:4000/leagues");
      setLeagues(res.data);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–∏–≥:", err);
    }
  };

  const createLeague = async () => {
    if (!isAdmin) {
      alert("‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ª–∏–≥–∏");
      return;
    }
    if (!name.trim() || !prize.trim()) return;

    try {
      await axios.post(
        "http://localhost:4000/leagues",
        { name, prize: parseInt(prize) },
        { headers: { "x-role": "admin" } }
      );
      setName("");
      setPrize("");
      fetchLeagues();
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏–≥–∏:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ª–∏–≥—É");
    }
  };

  const handleLogin = () => {
    // –ø—Ä–æ—Å—Ç–µ–π—à–∞—è –∑–∞–≥–ª—É—à–∫–∞
    if (login === "admin" && password === "secret123") {
      setIsAdmin(true);
      setError("");
    } else {
      setError("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å");
      setIsAdmin(false);
    }
  };

  return (
    <div style={{ padding: "20px", fontFamily: "Arial" }}>
      <h1>üèÜ –õ–∏–≥–∏ Ravage League</h1>

      {!isAdmin ? (
        <div style={{ marginBottom: "20px" }}>
          <h2>–í—Ö–æ–¥ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h2>
          <input
            type="text"
            placeholder="–õ–æ–≥–∏–Ω"
            value={login}
            onChange={(e) => setLogin(e.target.value)}
          />
          <input
            type="password"
            placeholder="–ü–∞—Ä–æ–ª—å"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          <button onClick={handleLogin}>–í–æ–π—Ç–∏</button>
          {error && <p style={{ color: "red" }}>{error}</p>}
        </div>
      ) : (
        <div style={{ marginBottom: "20px" }}>
          <h2>–°–æ–∑–¥–∞—Ç—å –ª–∏–≥—É</h2>
          <input
            value={name}
            onChange={(e) => setName(e.target.value)}
            placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏–≥–∏"
          />
          <input
            type="number"
            value={prize}
            onChange={(e) => setPrize(e.target.value)}
            placeholder="–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥ ($)"
          />
          <button onClick={createLeague}>–°–æ–∑–¥–∞—Ç—å</button>
          <p style={{ color: "green" }}>‚úÖ –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –∞–¥–º–∏–Ω</p>
        </div>
      )}

      <h2>–í—Å–µ –ª–∏–≥–∏:</h2>
      <ul>
        {leagues.map((league) => (
          <li key={league.id}>
            {league.name} ‚Äî –ü—Ä–∏–∑: ${league.prize} (–ö–æ–º–∞–Ω–¥: {league.teams.length})
          </li>
        ))}
      </ul>
    </div>
  );
}
