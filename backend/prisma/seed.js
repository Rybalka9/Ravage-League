// backend/prisma/seed.ts
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

async function main() {
  console.log("üå± –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–¥–∏–Ω–≥ –±–∞–∑—ã...");

  // –°–æ–∑–¥–∞–µ–º –¥–∏–≤–∏–∑–∏–æ–Ω—ã
  const divisions = await prisma.division.createMany({
    data: [
      { name: "Amateur", maxTeams: 500000, description: "–ù–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å" },
      { name: "Semi-pro", maxTeams: 128, description: "–ü–æ–ª—É–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å" },
      { name: "Pro", maxTeams: 64, description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å" },
      { name: "Elite", maxTeams: 16, description: "–í—ã—Å—à–∏–π –¥–∏–≤–∏–∑–∏–æ–Ω" },
    ],
    skipDuplicates: true, // –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–∏–µ –∑–∞–ø–∏—Å–∏ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
  });

  console.log("‚úÖ –î–∏–≤–∏–∑–∏–æ–Ω—ã —Å–æ–∑–¥–∞–Ω—ã:", divisions);

  // –ë–µ—Ä—ë–º id –¥–∏–≤–∏–∑–∏–æ–Ω–æ–≤
  const amateur = await prisma.division.findUnique({ where: { name: "Amateur" } });
  const semiPro = await prisma.division.findUnique({ where: { name: "Semi-pro" } });
  const pro = await prisma.division.findUnique({ where: { name: "Pro" } });
  const elite = await prisma.division.findUnique({ where: { name: "Elite" } });

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
  if (amateur) {
    await prisma.team.create({
      data: { name: "Noobs United", divisionId: amateur.id },
    });
  }
  if (semiPro) {
    await prisma.team.create({
      data: { name: "Half-Pros", divisionId: semiPro.id },
    });
  }
  if (pro) {
    await prisma.team.create({
      data: { name: "Pro Killers", divisionId: pro.id },
    });
  }
  if (elite) {
    await prisma.team.create({
      data: { name: "Elite Gods", divisionId: elite.id },
    });
  }

  console.log("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–æ–∑–¥–∞–Ω—ã");
}

main()
  .then(async () => {
    await prisma.$disconnect();
    console.log("üå± –°–∏–¥–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω!");
  })
  .catch(async (e) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–¥–∏–Ω–≥–µ:", e);
    await prisma.$disconnect();
    process.exit(1);
  });
